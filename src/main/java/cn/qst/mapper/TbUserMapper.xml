<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.qst.mapper.TbUserMapper">
    <resultMap id="BaseResultMap" type="cn.qst.pojo.TbUser">
        <id column="uid" property="uid" jdbcType="CHAR"/>
        <result column="uname" property="uname" jdbcType="CHAR"/>
        <result column="password" property="password" jdbcType="CHAR"/>
        <result column="email" property="email" jdbcType="CHAR"/>
        <result column="phone" property="phone" jdbcType="CHAR"/>
        <result column="sex" property="sex" jdbcType="TINYINT"/>
        <result column="VIP" property="vip" jdbcType="TINYINT"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="image" property="image" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="BIT"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria"
                     separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value}
                                    and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem"
                                             open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria"
                     separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value}
                                    and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem"
                                             open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
		uid, uname, password, email, phone, sex, VIP, address,
		image, status
	</sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="cn.qst.pojo.TbUserExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from tb_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap"
            parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from tb_user
        where uid = #{uid,jdbcType=CHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		tb_user
		where uid = #{uid,jdbcType=CHAR}
	</delete>
    <delete id="deleteByExample"
            parameterType="cn.qst.pojo.TbUserExample">
        delete from tb_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.qst.pojo.TbUser">
		insert into tb_user (uid,
		uname, password,
		email, phone, sex, VIP,
		address, image, status)
		values
		(#{uid,jdbcType=CHAR}, #{uname,jdbcType=CHAR},
		#{password,jdbcType=CHAR},
		#{email,jdbcType=CHAR},
		#{phone,jdbcType=CHAR}, #{sex,jdbcType=TINYINT},
		#{vip,jdbcType=TINYINT},
		#{address,jdbcType=VARCHAR},
		#{image,jdbcType=VARCHAR}, #{status,jdbcType=BIT})
	</insert>
    <insert id="insertSelective" parameterType="cn.qst.pojo.TbUser">
        insert into tb_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                uid,
            </if>
            <if test="uname != null">
                uname,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="vip != null">
                VIP,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="image != null">
                image,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                #{uid,jdbcType=CHAR},
            </if>
            <if test="uname != null">
                #{uname,jdbcType=CHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=CHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=CHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=CHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=TINYINT},
            </if>
            <if test="vip != null">
                #{vip,jdbcType=TINYINT},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="image != null">
                #{image,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <select id="countByExample"
            parameterType="cn.qst.pojo.TbUserExample"
            resultType="java.lang.Integer">
        select count(*) from tb_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tb_user
        <set>
            <if test="record.uid != null">
                uid = #{record.uid,jdbcType=CHAR},
            </if>
            <if test="record.uname != null">
                uname = #{record.uname,jdbcType=CHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=CHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=CHAR},
            </if>
            <if test="record.phone != null">
                phone = #{record.phone,jdbcType=CHAR},
            </if>
            <if test="record.sex != null">
                sex = #{record.sex,jdbcType=TINYINT},
            </if>
            <if test="record.vip != null">
                VIP = #{record.vip,jdbcType=TINYINT},
            </if>
            <if test="record.address != null">
                address = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.image != null">
                image = #{record.image,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=BIT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tb_user
        set uid = #{record.uid,jdbcType=CHAR},
        uname =
        #{record.uname,jdbcType=CHAR},
        password =
        #{record.password,jdbcType=CHAR},
        email =
        #{record.email,jdbcType=CHAR},
        phone = #{record.phone,jdbcType=CHAR},
        sex = #{record.sex,jdbcType=TINYINT},
        VIP =
        #{record.vip,jdbcType=TINYINT},
        address =
        #{record.address,jdbcType=VARCHAR},
        image =
        #{record.image,jdbcType=VARCHAR},
        status =
        #{record.status,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective"
            parameterType="cn.qst.pojo.TbUser">
        update tb_user
        <set>
            <if test="uname != null">
                uname = #{uname,jdbcType=CHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=CHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=CHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=CHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=TINYINT},
            </if>
            <if test="vip != null">
                VIP = #{vip,jdbcType=TINYINT},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="image != null">
                image = #{image,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=BIT},
            </if>
        </set>
        where uid = #{uid,jdbcType=CHAR}
    </update>
    <update id="updateByPrimaryKey"
            parameterType="cn.qst.pojo.TbUser">
		update tb_user
		set uname = #{uname,jdbcType=CHAR},
		password = #{password,jdbcType=CHAR},
		email = #{email,jdbcType=CHAR},
		phone = #{phone,jdbcType=CHAR},
		sex = #{sex,jdbcType=TINYINT},
		VIP =
		#{vip,jdbcType=TINYINT},
		address = #{address,jdbcType=VARCHAR},
		image =
		#{image,jdbcType=VARCHAR},
		status = #{status,jdbcType=BIT}
		where uid =
		#{uid,jdbcType=CHAR}
	</update>

    <select id="selectByUname" parameterType="java.lang.String"
            resultType="java.lang.String">
		select `uname` from `tb_user` where `uname` = #{value}
	</select>

    <select id="selectByEmail" parameterType="java.lang.String"
            resultType="java.lang.String">
		select `email` from `tb_user` where `email` = #{value}
	</select>

    <select id="selectByPhone" parameterType="java.lang.String"
            resultType="java.lang.String">
		select `phone` from `tb_user` where `phone` = #{value}
	</select>

    <select id="selectByUnameOrUname"
            parameterType="java.lang.String" resultType="cn.qst.pojo.TbUser">
		select `uid`, `uname`, `password`,
		`email`, `phone`, `sex`, `vip`,
		`address`, `image`, `status`
		from
		`tb_user` where `uname` = #{value}
	</select>

    <select id="selectUserCity" parameterType="java.lang.String"
            resultType="cn.qst.pojo.TbCity">
	    select c.name name, p.name pname from tb_city c inner join
	    tb_province p
	    on c.pid = p.pid where c.cid = #{value}
    </select>

    <select id="selectAllProvince" resultType="cn.qst.pojo.TbProvince">
		select * from tb_province
	</select>

    <select id="selectCityByPid" parameterType="java.lang.Integer" resultType="cn.qst.pojo.TbCity">
		SELECT * FROM tb_city WHERE `pid` = #{value}
	</select>

    <update id = "changePassword" parameterType="cn.qst.pojo.TbUser">
        update tb_user set `password` = #{password} where `uname` = #{uname}
    </update>

    <update id="changeUserInfo" parameterType="cn.qst.pojo.TbUser">
        update tb_user
        <set>
            <if test="password != null">
                `password` = #{password,jdbcType=CHAR},
            </if>
            <if test="email != null">
                `email` = #{email,jdbcType=CHAR},
            </if>
            <if test="phone != null">
                `phone` = #{phone,jdbcType=CHAR},
            </if>
            <if test="sex != null">
                `sex` = #{sex,jdbcType=TINYINT},
            </if>
            <if test="vip != null">
                `VIP` = #{vip,jdbcType=TINYINT},
            </if>
            <if test="address != null">
                `address` = #{address,jdbcType=VARCHAR},
            </if>
        </set>
        where `uname` = #{uname,jdbcType=CHAR}
    </update>
    
    <update id="upHeadImage" parameterType="cn.qst.pojo.TbUser">
    update tb_user set `image` = #{image,jdbcType=CHAR}
    where `uname` = #{uname,jdbcType=CHAR}
    </update>
    
    <select id="selectUserInfo" parameterType="cn.qst.pojo.TbUser" resultType="cn.qst.pojo.TbUser">
    	select * from tb_user where uid = #{value}
    </select>
    
    <!-- 用户关注信息 -->
    
    <resultMap id="attention" type="cn.qst.pojo.TbAttention">
        <result column="uid" property="uid"/>
        <result column="bid" property="bid"/>
    </resultMap>

    <!--auto generated Code-->
    <sql id="attention_all">
        `uid`,
        `bid`
    </sql>

    <!--auto generated Code -->
    <insert id="attentionUser" parameterType="cn.qst.pojo.TbAttention" >
        INSERT INTO tb_attention (`uid`, `bid`) VALUES (#{uid}, #{bid})
    </insert>
    
    <select id="selectAttention" parameterType="java.lang.String" resultType="java.lang.Integer">
    	SELECT COUNT(*) FROM tb_attention WHERE uid = #{value}
    </select>
    
    <select id="selectFans" parameterType="java.lang.String" resultType="java.lang.Integer">
    	SELECT COUNT(*) FROM tb_attention WHERE bid = #{value}
    </select>
    
    <select id="verfiyAttentioned" parameterType="cn.qst.pojo.TbAttention" resultType="java.lang.String">
    	select `uid` from tb_attention where uid = #{uid} and bid = #{bid}
    </select>
      
    <delete id="cancelAttention" parameterType = "cn.qst.pojo.TbAttention">
    	DELETE FROM tb_attention WHERE uid = #{uid} AND bid = #{bid}
    </delete>
    
      <select id ="queryAttention" resultType="java.lang.String" parameterType="java.lang.String">
    select `uid` from tb_attention where `bid` = #{bid}
    </select>
    
    
    <select id ="queryFans" resultType="java.lang.String" parameterType="java.lang.String">
    select `bid` from tb_attention where `uid` = #{bid}
    </select>
   
</mapper>




